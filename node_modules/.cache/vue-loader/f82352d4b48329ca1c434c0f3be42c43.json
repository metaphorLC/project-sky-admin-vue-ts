{"remainingRequest":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/src/views/employee/index.vue?vue&type=style&index=0&id=19442e4b&lang=scss&scoped=true&","dependencies":[{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/src/views/employee/index.vue","mtime":1752019078293},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lin/Documents/lin/code/vue_project/project-sky-admin-vue-ts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.disabled-text {\r\n  color: #bac0cd !important;\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/employee","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"container\">\r\n      <div class=\"tableBar\">\r\n        <label style=\"margin-right: 5px;\">员工姓名: </label>\r\n        <el-input placeholder=\"请输入员工姓名\" v-model=\"name\" style=\"width: 15%;\" />\r\n        <el-button type=\"primary\" style=\"margin-left: 25px;\" @click=\"pageQuery()\">查询</el-button>\r\n        <el-button type=\"primary\" style=\"float: right;\">+添加员工</el-button>\r\n      </div>\r\n      <el-table :data=\"records\" stripe style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"员工姓名\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"账号\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"手机号\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"账号状态\">\r\n          <template v-slot=\"scope\">\r\n            {{ scope.row.status === 0 ? '禁用' : '启用' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"最后操作时间\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"操作\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"text\">\r\n              修改\r\n            </el-button>\r\n            <el-button type=\"text\" @click=\"handleStartOrStop(scope.row)\">\r\n              {{ scope.row.status === 1 ? '禁用' : '启用' }}\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination class=\"pageList\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n        :current-page=\"page\" :page-sizes=\"[10, 20, 30, 40, 50]\" :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=total>\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { getEmployeeList, enableOrDisableEmployee } from '@/api/employee';\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      page: 1,\r\n      pageSize: 10,\r\n      records: [],\r\n      total: 0\r\n    }\r\n  },\r\n  created() {\r\n    this.pageQuery();\r\n  },\r\n  methods: {\r\n    // 分页查询\r\n    pageQuery() {\r\n      //准备请求参数\r\n      const params = { name: this.name, page: this.page, pageSize: this.pageSize };\r\n      // 发送ajax请求, 访问后端服务, 获取分页数据(本项目规范, 此处为调用)\r\n      getEmployeeList(params).then(res => {\r\n        if (res.data.code === 1) {\r\n          this.total = res.data.data.total;\r\n          this.records = res.data.data.records;\r\n        }\r\n      }).catch(err => {\r\n        this.$message.error('请求出错了: ' + err.message);\r\n      });\r\n    },\r\n    // pageSize发生变化时触发\r\n    handleSizeChange(pageSize) {\r\n      this.pageSize = pageSize;\r\n      this.pageQuery();\r\n    },\r\n    // page发生变化时触发\r\n    handleCurrentChange(page) {\r\n      this.page = page;\r\n      this.pageQuery();\r\n    },\r\n    // 启用禁用员工账号\r\n    handleStartOrStop(row) {\r\n      // alert(`id=${row.id} status=${row.status}`);\r\n      if(row.username === 'admin') {\r\n        this.$message.error('admin为系统管理员账号, 不能更改账号状态！');\r\n        return;\r\n      }\r\n      // 弹出确认提示框\r\n      this.$confirm('确认要修改当前员工状态吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 处理参数, 主要是处理状态取值\r\n        const p = {\r\n          id: row.id,\r\n          status: !row.status ? 1 : 0\r\n        }\r\n        enableOrDisableEmployee(p).then(res => {\r\n          if (res.data.code === 1) {\r\n            this.$message.success('员工账号状态修改成功!');\r\n            this.pageQuery();\r\n          }\r\n        }).catch();\r\n    })\r\n\r\n\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.disabled-text {\r\n  color: #bac0cd !important;\r\n}\r\n</style>\r\n"]}]}